# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right


class Solution:
    def getLonelyNodes(self, root: TreeNode) -> List[int]:
        res=[]
        self.helper(res,root)
        return res
    def helper(self,res,root):
        if root.left and not root.right:
            res.append(root.left.val)
        elif root.right and not root.left:
            res.append(root.right.val)
        if root.left:
            self.helper(res,root.left)
        if root.right:
            self.helper(res,root.right)
            
            
class Solution:
    def getLonelyNodes(self, root: TreeNode) -> List[int]:
        queue=[root]
        res=[]
        while queue:
            node=queue.pop()
            if node.left and not node.right:
                res.append(node.left.val)
            if node.right and not node.left:
                res.append(node.right.val)
            if node.left:
                queue.append(node.left)
            if node.right:
                queue.append(node.right)
        return res
