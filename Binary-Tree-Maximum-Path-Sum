# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: TreeNode) -> int:
        
        def helper(node):
            nonlocal max_sum
            if not node:
                return 0
            max_left_sum=max(helper(node.left),0)
            max_right_sum=max(helper(node.right),0)
            path=node.val+max_left_sum+max_right_sum
            max_sum=max(max_sum,path)
            return node.val+max(max_left_sum,max_right_sum)
        
        max_sum=float('-inf')
        helper(root)
        return max_sum
