Given a binary tree where each path going from the root to any leaf form a valid sequence,
check if a given string is a valid sequence in such binary tree. 

We get the given string from the concatenation of an array of integers arr 
and the concatenation of all values of the nodes along a path results in a sequence in the given binary tree.
https://thefellowprogrammer.blogspot.com/2020/04/check-if-string-is-valid-sequence-from.html

Example:
Input: root = [0,1,0,0,1,0,null,null,1,0,0], arr = [0,1,0,1]
Output: true
Explanation: 
The path 0 -> 1 -> 0 -> 1 is a valid sequence (green color in the figure). 
Other valid sequences are: 
0 -> 1 -> 1 -> 0 
0 -> 0 -> 0



# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidSequence(self, root: TreeNode, arr: List[int]) -> bool:
        return self.helper(root,arr,0)
    
    def helper(self,root,arr,index):
        if not root or index==len(arr):
            return False
        if not root.left and not root.right and root.val==arr[index] and index==len(arr)-1:
            return True
        return root.val==arr[index] and (self.helper(root.left,arr,index+1) or self.helper(root.right,arr,index+1))
